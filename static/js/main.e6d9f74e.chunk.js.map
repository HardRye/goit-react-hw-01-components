{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","item","key","id","style","backgroundColor","Math","floor","random","percentage","defaultProps","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","head","type","amount","body","tran","bodyItem","currency","App","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e6d9f74e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3pqpC\",\"description\":\"Profile_description__2lfzm\",\"name\":\"Profile_name__3ARv-\",\"tag\":\"Profile_tag__nEylL\",\"location\":\"Profile_location__nEHp8\",\"avatar\":\"Profile_avatar__1xhsT\",\"stats\":\"Profile_stats__WVXrG\",\"label\":\"Profile_label__qeKOO\",\"quantity\":\"Profile_quantity__2CRSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__IQyAS\",\"head\":\"TransactionHistory_head__2KdrK\",\"type\":\"TransactionHistory_type__2N0Yg\",\"body\":\"TransactionHistory_body__1PCs0\",\"bodyItem\":\"TransactionHistory_bodyItem__3Me14\",\"amount\":\"TransactionHistory_amount__G6BMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3TZ9O\",\"title\":\"Statistics_title__3WyVJ\",\"statList\":\"Statistics_statList__199BQ\",\"item\":\"Statistics_item__o6gOe\",\"label\":\"Statistics_label__23AK9\",\"percentage\":\"Statistics_percentage__3jV17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__38hHc\",\"status\":\"FriendListItem_status__20g6n\",\"online\":\"FriendListItem_online__3mWb0 FriendListItem_status__20g6n\",\"offline\":\"FriendListItem_offline__be-Ks FriendListItem_status__20g6n\",\"avatar\":\"FriendListItem_avatar__9VNjY\",\"name\":\"FriendListItem_name__3-Oij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2IdeP\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  const { name, tag, location, avatar, stats } = user;\n\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title = '', stats }) => {\n  function randomColor() {\n    return `rgb(\n    ${Math.floor(Math.random() * 256)},\n    ${Math.floor(Math.random() * 256)}, \n    ${Math.floor(Math.random() * 256)})\n    `;\n  }\n\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(item => (\n          <li\n            className={styles.item}\n            key={item.id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={styles.label}>{item.label}</span>\n            <span className={styles.percentage}>{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => (\n  <li className={styles.item}>\n    <span className={isOnline ? styles.online : styles.offline} />\n    <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FriendListItem from './FriendListItem/FriendListItem';\n\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(item => (\n        <FriendListItem\n          avatar={item.avatar}\n          name={item.name}\n          isOnline={item.isOnline}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead className={styles.head}>\n      <tr>\n        <th className={styles.type}>Type</th>\n        <th className={styles.amount}>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody className={styles.body}>\n      {items.map(tran => (\n        <tr className={styles.bodyItem} key={tran.id}>\n          <td className={styles.type}>{tran.type}</td>\n          <td className={styles.amount}>{tran.amount}</td>\n          <td>{tran.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nimport user from '../assets/user.json';\nimport statisticalData from '../assets/statistical-data.json';\nimport friends from '../assets/friends.json';\nimport transactions from '../assets/transactions.json';\n\nconst App = () => (\n  <div>\n    <Profile user={user} />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </div>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}